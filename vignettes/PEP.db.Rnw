%\VignetteEngine{knitr::knitr}
%\VignetteIndexEntry{The PEP.db users guide}
%\VignetteDepends{IRanges}
%\VignetteKeywords{Storage of peptide collections}
%\VignettePackage{PEP.db}
\documentclass[11pt]{article}

\usepackage{hyperref}
\usepackage[hmargin=2cm, vmargin=3cm]{geometry}

<<include=FALSE>>=
library(knitr)
opts_chunk$set(tidy=TRUE)
@


\title{The PEP.db User Guide}
\author{Renan Sauteraud\footnote{rsautera@fhcrc.org}}

\begin{document}
\maketitle

\tableofcontents

%\newpage

\section{Introduction}
\texttt{PEP.db} is an R package that stores peptide collections and provide functions for their analysis. It is intended to be used in conjunction with other packages for peptide analysis and visualisation: \texttt{HIV.db}, \texttt{pepStat} anf \texttt{Pviz}.

As with any R package, it should first be loaded in the session
<<loading-package, message=FALSE>>=
library(PEP.db)
@

\section{Peptide collections}
\subsection{Information}
For each peptide, the following collections display information about the position relative to the reference sequence, the alignment, the trimmed alignment, the zSums for the physicochemical properties as well as the clades where they can be found.

\subsection{Structure}
The datasets in this package are \texttt{RangedData} objects. For more information about the class, its accessors and setters, please refer to \texttt{IRanges} documentation.

\subsection{pep\_hxb2}
This collection is based on the alignment of the reference HIV sequence hxb2 and seven subtypes (clades) A, B, C, D, M, CRF01 and CRF02.

\subsection{pep\_hxb2JPT}
This collection adds a few more clades to the previous one: CM244, CON\_01\_AE, LAI\_A04321 and MN\_DD328842. 

\subsection{pep\_mac239}
This collection is for SIV, with the clades mac239 and E660.

\subsection{pep\_m239smE543}
This collection is for SIV, with the clades mac239 and E543.

\section{Loading the collections}
The peptide collections can be loaded like any other R dataset.
<<loading-collection>>=
data(pep_hxb2)
head(pep_hxb2)
@

\section{Create collections}
While the package comes with datasets for HIV and SIV. It is possible to create new collections for different organisms or proteins.

\subsection{Requirements}
Minimum information required to create a peptide collection:
\begin{enumerate}
\item[ -] start
\item[ -] end or width
\item[ -] peptide sequence
\end{enumerate}

\subsection{Constructors}
Peptide collections being \texttt{RangedData} objects, the RangedData contructor should be used to generate a collection with at least the required information.
<<constructor-rd, message=FALSE>>=
library(IRanges)
AA <- c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
starts <- seq(1, 30, 3)
ends <- starts + 14
peptides <- sapply(1:10, function(x){ paste0(AA[floor(runif(15, 1,20))], collapse="") })
data <- data.frame(start=starts, end=ends, peptide=peptides)
newRD <- RangedData(data)
@

Then the function \texttt{create\_db} in \texttt{pepStat} should be used to add the Zscore information to the newly constructed RangedData object. This is required for the normalization of \texttt{peptideSet}.
<<create-db, message=FALSE>>=
library(pepStat)
new_pep <- create_db(newRD)
@

Any additional information will be passed as a new column in the \texttt{RangedData} objects and later in the \texttt{peptideSet} object.
<<constructor-add-info>>=
data <- data.frame(start=starts, end=ends, peptide=peptides, var1=rnorm(10))
newDB <- RangedData(data)
new_pep <- create_db(newDB)
@


\end{document}
